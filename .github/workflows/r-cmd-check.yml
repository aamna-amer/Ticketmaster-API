# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R-CMD-check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: R CMD check (${{ matrix.config.os }})

    strategy:
      matrix:
        config:
          - { os: macos-latest }
          - { os: windows-latest }
          - { os: ubuntu-latest }

    env:  # Define environment variables here
      TICKETMASTER_API_KEY: ${{ secrets.TICKETMASTER_API_KEY }}
      R_TESTS: ""

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
     
      - name: Check if API key is set
        run: echo "TICKETMASTER_API_KEY is set to ${TICKETMASTER_API_KEY}"

      - name: Install Pandoc (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install pandoc

      - name: Install Pandoc (macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          brew install pandoc

      - name: Install Pandoc (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install pandoc

      - name: Install system dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::testthat
            any::covr
            any::ggplot2
            any::httr
            any::jsonlite
            any::dplyr
            any::plotly

      - name: Check package
        run: Rscript -e 'rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")'

      - name: Run tests
        run: Rscript -e 'testthat::test_package("TicketmasterR")'

      - name: Run code coverage
        run: Rscript -e 'covr::codecov()'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: aamna-amer/TicketmasterR

      - name: Upload check results (if failure occurs)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: r-cmd-check-results
          path: check
